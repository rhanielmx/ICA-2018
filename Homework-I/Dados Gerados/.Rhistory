library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
for(element in elements){
hist(data[[element]], main=paste0("Histogram of ",element))
}
par(mfrow=c(3,3))
for(element in elements){
hist(data[[element]], main=paste0("Histogram of ",element))
}
for(element in elements){
hist(data[[element]], xlab = element, main=paste0("Histogram of ",element))
}
library(ggplot2)
?geom_histogram(data=Glass)
geom_histogram(data=Glass, aes=RI)
geom_histogram(data=Glass, aes(x=RI))
ggplot(data = Glass, aes(RI)) + geom_histogram()
par(mfrow=c(3,3))
for(element in elements){
ggplot(data = Glass, aes(element)) + geom_histogram()
}
for(element in elements){
print(ggplot(data = Glass, aes(element))) + geom_histogram()
}
for(element in elements){
hist_plot = ggplot(data = Glass, aes(element)) + geom_histogram()
}
for(element in elements){
hist_plot = ggplot(data = Glass, aes(element)) + geom_histogram()
print(hist_plot)
}
par(mfrow=c(3,3))
for(element in elements){
hist_plot = ggplot(data = Glass, aes(element)) + geom_histogram()
print(hist_plot)
}
for(element in elements){
print(ggplot(data = Glass, aes(element)) + geom_histogram())
}
print(ggplot(data = Glass, aes(element)) + geom_histogram())
(ggplot(data = Glass, aes(RI)) + geom_histogram())
(ggplot(data = Glass, aes(Na)) + geom_histogram())
(ggplot(data = Glass, aes(Fe)) + geom_histogram())
elements
elements
ggplot(data = Glass[-10], aes(element)) + geom_histogram()
ggplot(data = Glass[-10], aes("Fe")) + geom_histogram()
ggplot(data = Glass[-10], aes(RI)) + geom_histogram()
ggplot(data = Glass[-10], aes(Fe)) + geom_histogram()
ggplot(data = Glass[-10], aes(Glass[[element]])) + geom_histogram()
par(mfrow=c(3,3))
for(element in elements){
print(ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram())
}
ggplot(data = Glass[-10], aes(Glass[[element]])) + geom_histogram()
ggplot(data = Glass[-10], aes(Glass[[element]])) + geom_histogram(fill=Type)
ggplot(data = Glass[-10], aes(Glass[[element]])) + geom_histogram(fill=aes(Type))
ggplot(data = Glass[-10], aes(Glass[[element]])) + geom_histogram(fill=aes(Glass[Type]))
ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram(fill=aes(Type))
ggplot(data = Glass, aes(x=Glass[[element]], fill=Type)) + geom_histogram(fill=aes(Type))
ggplot(data = Glass, aes(x=Glass[[element]], fill=factor(Type))) + geom_histogram(fill=aes(Type))
ggplot(data = Glass, aes(x=Glass[[element]], fill=factor(Type))) + geom_histogram()
ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram()
setwd("~/Dropbox/HWI - Data Pre-Processing")
dev.off()
source('~/Dropbox/HWI - Data Pre-Processing/ScriptHW.R')
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram()
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
hist(df[[element]], xlab=element, main=file_name)
dev.off()
}
}
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
print(ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram())
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
hist(df[[element]], xlab=element, main=file_name)
dev.off()
}
}
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
print(ggplot(data = Glass, aes(Glass[[element]]),xlab=element) + geom_histogram())
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
hist(df[[element]], xlab=element, main=file_name)
dev.off()
}
}
?ggplot
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
print(ggplot(data = Glass, aes(Glass[[element]])) + labels(xlab=element) + geom_histogram())
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
hist(df[[element]], xlab=element, main=file_name)
dev.off()
}
}
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
print(ggplot(data = Glass, aes(Glass[[element]])) + labels(x=element) + geom_histogram())
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
hist(df[[element]], xlab=element, main=file_name)
dev.off()
}
}
print(ggplot(data = Glass, aes(Glass[[element]])) + labels(x=element) + geom_histogram())
print(ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram())
(ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram())
ggplot(data = Glass, aes(Glass[[element]])) + geom_histogram()
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
print(ggplot(data = Glass, aes(Glass[[element]])) + xlab(element) + geom_histogram())
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
hist(df[[element]], xlab=element, main=file_name)
dev.off()
}
}
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
print(ggplot(data = Glass, aes(Glass[[element]])) + xlab(element) + geom_histogram(colour="black", fill="blue"))
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
hist(df[[element]], xlab=element, main=file_name)
dev.off()
}
}
library(mlbench)
library(e1071)
data(Glass)
attach(Glass)
#Função encontrada na internet
mkdirs<- function(dir){
if(!file.exists(dir)){
mkdirs(dirname(dir))
dir.create(dir)
}
}
data <- Glass[,-10]
mean_vec <- NULL
std_vec <- NULL
skewness_vec <- NULL
elements <- colnames(data)
main_path = file.path(getwd(),"figures")
file_path=file.path(main_path,"unconditional")
mkdirs(file_path)
for(element in elements){
mean_vec <- append(mean_vec, mean(data[[element]]))
std_vec <- append(std_vec, sd(data[[element]]))
skewness_vec <- append(skewness_vec, skewness(data[[element]]))
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,".png")))
print(ggplot(data = data, aes(data[[element]])) + xlab(element) + geom_histogram(colour="black", fill="blue"))
dev.off()
}
statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(statistics) <- c("Mean", "SD", "Skewness")
colnames(statistics) <- elements
write.csv(statistics,file.path(file_path, "Unconditional_Statistics.csv"),row.names = TRUE)
#Item b)
for(class in unique(Type)){
file_path=file.path(main_path,paste0("class-conditional/Class",class))
mkdirs(file_path)
df <- data[Type==class,]
mean_vec <- mapply(mean, df)
std_vec <- mapply(sd, df)
skewness_vec <- mapply(skewness, df)
cc_statistics <- data.frame(rbind(mean_vec,std_vec,skewness_vec))
rownames(cc_statistics) <- c("Mean", "SD", "Skewness")
colnames(cc_statistics) <- elements
write.csv(cc_statistics,file.path(file_path, paste0("Conditional_Statistics-Class",class,".csv")),row.names = FALSE)
for(element in elements){
file_name=paste0("Histogram_of_", element)
png(file.path(file_path, paste0(file_name,"-Class",class,".png")))
print(ggplot(data = df, aes(df[[element]])) + xlab(element) + geom_histogram(colour="black", fill="blue"))
dev.off()
}
}
pairs(Glass)
requirements <- c("e1071", "mlbench", "corrplot", "ggplot2","ggfortify")
#if(!(requirement %in% rownames(installed.packages()))){
#install.packages(requirement)
#}
for (requirement in requirements){
if(!require(requirement)){
install.packages(requirement)
}
}
